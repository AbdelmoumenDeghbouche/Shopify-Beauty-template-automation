{% comment %}
if combine_pretext is false, the text before the first <h4> will be shown above all tabs, otherwise added to the first tab
{% endcomment %}
{% assign description = product.description %}
{% assign combine_pretext = false %}

{% if description contains "<h4" %}
{% assign tab_heads = '' %}
{% assign tab_texts = '' %}
{% assign pretext = '' %}

{% assign chunks = description | split: "<h4" %}
{% for c in chunks %}
{% if c contains "</h4>" %}
{% assign chunk = c | split: "</h4>" %}
{% assign header_content = chunk.first | split: ">" | last %}
{% assign tab_heads = tab_heads | append: ",," | append: header_content %}
{% assign tab_texts = tab_texts | append: ",," %}
{% if pretext != blank and combine_pretext %}
{% assign tab_texts = tab_texts | append: pretext | append: "<br>" %}
{% assign pretext = '' %}
{% endif %}
{% assign tab_texts = tab_texts | append: chunk.last %}
{% elsif forloop.first %}
{% assign pretext = c %}
{% endif %}
{% endfor %}

{% assign tab_heads = tab_heads | remove_first: ",," | split: ",," %}
{% assign tab_texts = tab_texts | remove_first: ",," | split: ",," %}

{% assign index =  1  %}
<div>
  {% if pretext != blank and combine_pretext == false %}
  <span class=pretext>{{ pretext }}</span>
  {% endif %}
  <ul class="tabs">
    {% for head in tab_heads %}
    <li><a href="#tab-{{- index -}}" class="h4 {% if forloop.first %}active{% endif %}">{{ head }}</a></li>
    {% assign index =  index | plus: 1  %}
    {% endfor %}
  </ul>
  {% assign index =  1  %}
  {% for text in tab_texts %}
  <div id="tab-{{- index -}}" class="product__description rte quick-add-hidden tab-content {% if forloop.first %}active{% endif %}" {% if forloop.first %}style="display: block;"{% else %}style="display: none;"{% endif %}>{{ text }}</div>
  {% assign index =  index | plus: 1  %}
  {% endfor %}
</div> 

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tabContainers = document.querySelectorAll('ul.tabs');
    
    tabContainers.forEach(container => {
      const links = container.querySelectorAll('a');
      let activeTab = links[0];
      let activeContent = document.querySelector(activeTab.getAttribute('href'));
      
      // Set initial state for all tab contents
      links.forEach((link, index) => {
        const content = document.querySelector(link.getAttribute('href'));
        if (content) {
          content.classList.add('tab-content');
          if (index === 0) {
            content.classList.add('active');
            content.style.display = 'block';
          } else {
            content.style.display = 'none';
          }
        }
      });

      // Add click handlers
      links.forEach(link => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
          
          if (link === activeTab) return; // Prevent clicking the same tab
          
          // Remove active state from current tab and content
          activeTab.classList.remove('active');
          activeContent.classList.remove('active');
          
          // Wait for fade out animation
          setTimeout(() => {
            activeContent.style.display = 'none';
            
            // Set new active tab
            activeTab = link;
            activeContent = document.querySelector(link.getAttribute('href'));
            
            // Show new active content with animation
            activeTab.classList.add('active');
            activeContent.style.display = 'block';
            
            // Force reflow
            void activeContent.offsetWidth;
            
            // Add active class after display is set
            requestAnimationFrame(() => {
              activeContent.classList.add('active');
            });
          }, 400); // Match this with CSS transition duration
        });
      });

      // Handle responsive behavior
      let currentLayout = 'wide';
      const updateLayout = () => {
        const totalWidth = Array.from(container.children).reduce((sum, li) => {
          return sum + li.offsetWidth;
        }, 0);

        if (container.offsetWidth > totalWidth) {
          if (currentLayout !== 'wide') {
            container.classList.remove('vertical');
            currentLayout = 'wide';
          }
        } else {
          if (currentLayout !== 'narrow') {
            container.classList.add('vertical');
            currentLayout = 'narrow';
          }
        }
      };

      // Update layout on load and resize
      window.addEventListener('load', updateLayout);
      window.addEventListener('resize', updateLayout);
    });
  });
</script>
<style>
  ul.tabs {
    border-bottom: 2px solid rgb(var(--color-button));
    display: block;
    margin: 0 0 20px;
    padding: 0;
    list-style: none;
  }
  
  ul.tabs li {
    display: block;
    float: left;
    height: 100%;
    margin: 0 4px 0 0;
    padding: 0;
    width: auto;
  }

  ul.tabs li a {
    display: block;
    font-size: var(--tab-heading-size);
    padding: 0.8rem 1.5rem;
    text-decoration: none;
    width: auto;
    color: rgb(var(--color-foreground));
    background: rgba(var(--color-button), 0.2);
    border-bottom: none;
    border-top-left-radius: var(--tabs-radius);
    border-top-right-radius: var(--tabs-radius);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    top: 2px;
  }

  ul.tabs li a:hover {
    background: rgba(var(--color-button), 0.2);
  }

  ul.tabs li a.active, ul.tabs li a.is-active {
    color: rgb(var(--color-button-text));
    background: rgb(var(--color-button));
    border-color: rgb(var(--color-button));
    border-bottom: none;
  }

  ul.tabs:before, ul.tabs:after {
    content: " ";
    display: block;
    height: 0;
    overflow: hidden;
    visibility: hidden;
    width: 0;
  }
  
  ul.tabs:after {
    clear: both;
  }

  /* Tab content animations */
  .tab-content {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1),
                transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    display: none;
  }

  .tab-content.active {
    opacity: 1;
    transform: translateY(0);
    display: block;
  }
</style>

{% else %}
  <div class="product__description rte quick-add-hidden">
{{ description }}
  </div>
{% endif %}